services:
  app:
    container_name: hackops-app
    depends_on:
      - api
    build: ./client
    ports:
      - 3000:3000
    env_file:
      - ./client/.env
    develop:
      watch:
        - path: ./client/package.json
          action: rebuild
        - path: ./client/pnpm-lock.yaml
          action: rebuild
        - path: ./client
          target: /app
          action: sync
    networks:
      - hackops-network

  api:
    container_name: hackops-api
    build: ./server
    ports:
      - 8000:8000
    env_file:
      - ./server/.env
    develop:
      watch:
        - path: ./server/package.json
          action: rebuild
        - path: ./server/pnpm-lock.yaml
          action: rebuild
        - path: ./server
          target: /app
          action: sync
    networks:
      - hackops-network
    volumes:
      - hackops-api-data:/app/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - hackops-prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.listen-address=:9090"
      - "--storage.tsdb.retention.time=30d"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.wal-compression"
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - hackops-network

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - hackops-grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - hackops-network

  sonarqube:
    image: sonarqube:community
    restart: unless-stopped
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - hackops-network

  db:
    image: postgres:12
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - hackops-network

networks:
  hackops-network:
    driver: bridge

volumes:
  hackops-api-data:
    name: hackops-api-data
  hackops-prometheus-data:
    name: hackops-prometheus-data
  hackops-grafana-data:
    name: hackops-grafana-data
  sonarqube_data:
    name: sonarqube_data
  sonarqube_extensions:
    name: sonarqube_extensions
  sonarqube_logs:
    name: sonarqube_logs
  postgresql:
    name: postgresql
  postgresql_data:
    name: postgresql_data
